// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using Newtonsoft.Json.Linq;

namespace DocumentDBRestApi.Models
{
    /// <summary>
    /// 
    /// </summary>
    public class Database
    {
        /// <summary>
        /// Optional. This is a system generated property that specifies the
        /// addressable path of the collections resource.
        /// </summary>
        public string Colls { get; set; }

        /// <summary>
        /// Optional. This is a system generated property representing the
        /// resource etag required for optimistic concurrency control.
        /// </summary>
        public string Etag { get; set; }

        /// <summary>
        /// Optional. This is a system generated property. The resource id
        /// (_rid) is a unique identifier that is also hierarchical per the
        /// resource stack on the resource model. It is used internally for
        /// placement of and navigation to the database resource.
        /// </summary>
        public string Rid { get; set; }

        /// <summary>
        /// Optional. This is a system generated property. It is the unique
        /// addressable URI for the resource.
        /// </summary>
        public string Self { get; set; }

        /// <summary>
        /// Optional. This is a system generated property. It specifies the
        /// last updated timestamp of the resource. The value is a timestamp.
        /// </summary>
        public string Ts { get; set; }

        /// <summary>
        /// Optional. This is a system generated property that specifies the
        /// addressable path of the users resource.
        /// </summary>
        public string Users { get; set; }

        /// <summary>
        /// Required. The user generated unique name for the database. This is
        /// a string that must not be more than 255 characters.
        /// </summary>
        public string Id { get; set; }

        /// <summary>
        /// Initializes a new instance of the Database class.
        /// </summary>
        public Database()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the Database class with required
        /// arguments.
        /// </summary>
        public Database(string id)
            : this()
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            Id = id;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject == null || inputObject.Type == JTokenType.Null) return;
            var collsValue = inputObject["_colls"];
            if (collsValue != null && collsValue.Type != JTokenType.Null)
            {
                Colls = ((string)collsValue);
            }
            var etagValue = inputObject["_etag"];
            if (etagValue != null && etagValue.Type != JTokenType.Null)
            {
                Etag = ((string)etagValue);
            }
            var ridValue = inputObject["_rid"];
            if (ridValue != null && ridValue.Type != JTokenType.Null)
            {
                Rid = ((string)ridValue);
            }
            var selfValue = inputObject["_self"];
            if (selfValue != null && selfValue.Type != JTokenType.Null)
            {
                Self = ((string)selfValue);
            }
            var tsValue = inputObject["_ts"];
            if (tsValue != null && tsValue.Type != JTokenType.Null)
            {
                Ts = ((string)tsValue);
            }
            var usersValue = inputObject["_users"];
            if (usersValue != null && usersValue.Type != JTokenType.Null)
            {
                Users = ((string)usersValue);
            }
            var idValue = inputObject["Id"];
            if (idValue != null && idValue.Type != JTokenType.Null)
            {
                Id = ((string)idValue);
            }
        }
    }
}

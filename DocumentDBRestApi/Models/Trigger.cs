// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;

namespace DocumentDBRestApi.Models
{
    /// <summary>
    /// 
    /// </summary>
    public class Trigger
    {
        /// <summary>
        /// Optional.
        /// </summary>
        public string Etag { get; set; }

        /// <summary>
        /// Optional.
        /// </summary>
        public string Rid { get; set; }

        /// <summary>
        /// Optional.
        /// </summary>
        public string Self { get; set; }

        /// <summary>
        /// Optional.
        /// </summary>
        public string Ts { get; set; }

        /// <summary>
        /// Required. This is a user settable property. This is the body of the
        /// Trigger
        /// </summary>
        public string Body { get; set; }

        /// <summary>
        /// Required.
        /// </summary>
        public string Id { get; set; }

        /// <summary>
        /// Optional. This is the type of operation that will invoke the
        /// trigger. The acceptable values are: All, Insert, Replace and
        /// Delete.
        /// </summary>
        public string TriggerOperation { get; set; }

        /// <summary>
        /// Optional. This specifies when the trigger will be fired. The
        /// acceptable values are: Pre and Post. Pre triggers fire before an
        /// operation while Post triggers after an operation.
        /// </summary>
        public string TriggerType { get; set; }

        /// <summary>
        /// Initializes a new instance of the Trigger class.
        /// </summary>
        public Trigger()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the Trigger class with required
        /// arguments.
        /// </summary>
        public Trigger(string id, string body)
            : this()
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            if (body == null)
            {
                throw new ArgumentNullException(nameof(body));
            }
            Id = id;
            Body = body;
        }
    }
}

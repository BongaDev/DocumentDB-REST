// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using DocDbCollectionAPI.Models;

namespace DocDbCollectionAPI
{
    public static class DocDbCollectionApiClientExtensions
    {
        /// <summary>
        /// Create an Attachment
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format. 
        /// Example - Fri, 08 Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static AttachmentResponse CreateAttachement(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, Attachment request, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).CreateAttachementAsync(ridDB, ridColl, ridDoc, request, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create an Attachment
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// Example - Fri, 08 Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<AttachmentResponse> CreateAttachementAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, Attachment request, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.CreateAttachementWithOperationResponseAsync(ridDB, ridColl, ridDoc, request, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }

        /// <summary>
        /// Create a new Document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// Example - Fri, 08 Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static Document CreateDocument(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, CustomBody request, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).CreateDocumentAsync(ridDB, ridColl, request, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create a new Document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// Example - Fri, 08 Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Document> CreateDocumentAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, CustomBody request, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.CreateDocumentWithOperationResponseAsync(ridDB, ridColl, request, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }

        /// <summary>
        /// Delete a Document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// Example - Fri, 08 Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static object DeleteDocument(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).DeleteDocumentAsync(ridDB, ridColl, ridDoc, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Delete a Document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// Example - Fri, 08 Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<object> DeleteDocumentAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.DeleteDocumentWithOperationResponseAsync(ridDB, ridColl, ridDoc, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }

        /// <summary>
        /// Execute a Stored Procedure
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridProc'>
        /// Required. The Procedure ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='contentType'>
        /// Required. Required. The Content-Type header must be
        /// application/json.
        /// </param>
        /// <param name='xMSDocumentdbQueryEnableScan'>
        /// Required.
        /// </param>
        /// <param name='xMSDocumentdbIsquery'>
        /// Required.
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.  
        /// Example - Fri, 08 Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static QueryResponseBody ExecuteStoredProcedure(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridProc, QueryRequest request, string authorization, string contentType, bool xMSDocumentdbQueryEnableScan, bool xMSDocumentdbIsquery, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).ExecuteStoredProcedureAsync(ridDB, ridColl, ridProc, request, authorization, contentType, xMSDocumentdbQueryEnableScan, xMSDocumentdbIsquery, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Execute a Stored Procedure
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridProc'>
        /// Required. The Procedure ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='contentType'>
        /// Required. Required. The Content-Type header must be
        /// application/json.
        /// </param>
        /// <param name='xMSDocumentdbQueryEnableScan'>
        /// Required.
        /// </param>
        /// <param name='xMSDocumentdbIsquery'>
        /// Required.
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format. 
        /// Apr 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<QueryResponseBody> ExecuteStoredProcedureAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridProc, QueryRequest request, string authorization, string contentType, bool xMSDocumentdbQueryEnableScan, bool xMSDocumentdbIsquery, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.ExecuteStoredProcedureWithOperationResponseAsync(ridDB, ridColl, ridProc, request, authorization, contentType, xMSDocumentdbQueryEnableScan, xMSDocumentdbIsquery, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Get an Attachment from document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='ridAttch'>
        /// Required. The Attachment ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.           example - Fri, 08 Apr
        /// 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static AttachmentRaw GetAttachement(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string ridAttch, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).GetAttachementAsync(ridDB, ridColl, ridDoc, ridAttch, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Get an Attachment from document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='ridAttch'>
        /// Required. The Attachment ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.           example - Fri, 08 Apr
        /// 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<AttachmentRaw> GetAttachementAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string ridAttch, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.GetAttachementWithOperationResponseAsync(ridDB, ridColl, ridDoc, ridAttch, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Get a Document.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static Document GetDocumentById(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string authorization, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).GetDocumentByIdAsync(ridDB, ridColl, ridDoc, authorization, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Get a Document.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Document> GetDocumentByIdAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string authorization, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.GetDocumentByIdWithOperationResponseAsync(ridDB, ridColl, ridDoc, authorization, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// List Documents
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static IList<Document> ListDocuments(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).ListDocumentsAsync(ridDB, ridColl, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List Documents
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<IList<Document>> ListDocumentsAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.ListDocumentsWithOperationResponseAsync(ridDB, ridColl, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Get a list of Stored Procedures for the Collection
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        public static IList<StoredProcedure> ListStoredProcedures(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string authorization)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).ListStoredProceduresAsync(ridDB, ridColl, authorization), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Get a list of Stored Procedures for the Collection
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<IList<StoredProcedure>> ListStoredProceduresAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string authorization, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.ListStoredProceduresWithOperationResponseAsync(ridDB, ridColl, authorization, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Perform a document query
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static IList<Document> QueryDocuments(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).QueryDocumentsAsync(ridDB, ridColl, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Perform a document query
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<IList<Document>> QueryDocumentsAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.QueryDocumentsWithOperationResponseAsync(ridDB, ridColl, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Query a Trigger
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='contentType'>
        /// Required. Required. The Content-Type header must be
        /// application/json.
        /// </param>
        /// <param name='xMSDocumentdbQueryEnableScan'>
        /// Required.
        /// </param>
        /// <param name='xMSDocumentdbIsquery'>
        /// Required.
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.       example - Fri, 08 Apr
        /// 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static QueryResponseBody QueryTrigger(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string contentType, bool xMSDocumentdbQueryEnableScan, bool xMSDocumentdbIsquery, QueryRequest request, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).QueryTriggerAsync(ridDB, ridColl, contentType, xMSDocumentdbQueryEnableScan, xMSDocumentdbIsquery, request, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Query a Trigger
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='contentType'>
        /// Required. Required. The Content-Type header must be
        /// application/json.
        /// </param>
        /// <param name='xMSDocumentdbQueryEnableScan'>
        /// Required.
        /// </param>
        /// <param name='xMSDocumentdbIsquery'>
        /// Required.
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.       example - Fri, 08 Apr
        /// 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<QueryResponseBody> QueryTriggerAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string contentType, bool xMSDocumentdbQueryEnableScan, bool xMSDocumentdbIsquery, QueryRequest request, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.QueryTriggerWithOperationResponseAsync(ridDB, ridColl, contentType, xMSDocumentdbQueryEnableScan, xMSDocumentdbIsquery, request, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Query a UDF
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='contentType'>
        /// Required. Required. The Content-Type header must be
        /// application/json.
        /// </param>
        /// <param name='xMSDocumentdbQueryEnableScan'>
        /// Required.
        /// </param>
        /// <param name='xMSDocumentdbIsquery'>
        /// Required.
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format. example: Fri, 08 Apr 2015
        /// 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static QueryResponseBody QueryUdf(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, QueryRequest request, string authorization, string contentType, bool xMSDocumentdbQueryEnableScan, bool xMSDocumentdbIsquery, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).QueryUdfAsync(ridDB, ridColl, request, authorization, contentType, xMSDocumentdbQueryEnableScan, xMSDocumentdbIsquery, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Query a UDF
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='contentType'>
        /// Required. Required. The Content-Type header must be
        /// application/json.
        /// </param>
        /// <param name='xMSDocumentdbQueryEnableScan'>
        /// Required.
        /// </param>
        /// <param name='xMSDocumentdbIsquery'>
        /// Required.
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format. example: Fri, 08 Apr 2015
        /// 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<QueryResponseBody> QueryUdfAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, QueryRequest request, string authorization, string contentType, bool xMSDocumentdbQueryEnableScan, bool xMSDocumentdbIsquery, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.QueryUdfWithOperationResponseAsync(ridDB, ridColl, request, authorization, contentType, xMSDocumentdbQueryEnableScan, xMSDocumentdbIsquery, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Register/ Create a Stored Procedure
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.          example - Fri, 08 Apr
        /// 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        public static StoredProcedure RegisterStoredProcedure(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, QueryRequest request, string authorization, string xMSDate, string xMSVersion)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).RegisterStoredProcedureAsync(ridDB, ridColl, request, authorization, xMSDate, xMSVersion), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Register/ Create a Stored Procedure
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='request'>
        /// Required.
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.          example - Fri, 08 Apr
        /// 2015 03:52:31 GMT
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<StoredProcedure> RegisterStoredProcedureAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, QueryRequest request, string authorization, string xMSDate, string xMSVersion, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.RegisterStoredProcedureWithOperationResponseAsync(ridDB, ridColl, request, authorization, xMSDate, xMSVersion, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <summary>
        /// Replace a Document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='request'>
        /// Optional.
        /// </param>
        public static Document ReplaceDocument(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string authorization, string xMSDate, string xMSVersion, Document request = null)
        {
            return Task.Factory.StartNew(s => ((IDocDbCollectionApiClient)s).ReplaceDocumentAsync(ridDB, ridColl, ridDoc, authorization, xMSDate, xMSVersion, request), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Replace a Document
        /// </summary>
        /// <param name='operations'>
        /// Reference to the DocDbCollectionAPI.IDocDbCollectionApiClient.
        /// </param>
        /// <param name='ridDB'>
        /// Required. The Database Id
        /// </param>
        /// <param name='ridColl'>
        /// Required. The Collection ID
        /// </param>
        /// <param name='ridDoc'>
        /// Required. The Document ID
        /// </param>
        /// <param name='authorization'>
        /// Required. The authentication type and signature token. Both master
        /// key and resource tokens are allowed for this operation
        /// </param>
        /// <param name='xMSDate'>
        /// Required. The date of the request The date is expressed in
        /// Coordinated Universal Time format.
        /// </param>
        /// <param name='xMSVersion'>
        /// Required. The version of DocumentDB REST service. The latest
        /// version is used when the header is not provided use 2015-08-06
        /// </param>
        /// <param name='request'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Document> ReplaceDocumentAsync(this IDocDbCollectionApiClient operations, string ridDB, string ridColl, string ridDoc, string authorization, string xMSDate, string xMSVersion, Document request = null, CancellationToken cancellationToken = default(CancellationToken))
        {
            var result = await operations.ReplaceDocumentWithOperationResponseAsync(ridDB, ridColl, ridDoc, authorization, xMSDate, xMSVersion, request, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}

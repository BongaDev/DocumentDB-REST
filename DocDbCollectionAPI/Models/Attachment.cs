// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using Newtonsoft.Json.Linq;

namespace DocDbCollectionAPI.Models
{
    public class Attachment
    {

        /// <summary>
        /// Initializes a new instance of the Attachment class.
        /// </summary>
        public Attachment()
        {
        }

        /// <summary>
        /// Initializes a new instance of the Attachment class with required
        /// arguments.
        /// </summary>
        public Attachment(string id, string contentType, string media)
            : this()
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            if (contentType == null)
            {
                throw new ArgumentNullException(nameof(contentType));
            }
            if (media == null)
            {
                throw new ArgumentNullException(nameof(media));
            }
            Id = id;
            ContentType = contentType;
            Media = media;
        }


        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Attachment
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (ContentType == null)
            {
                throw new ArgumentNullException(nameof(ContentType));
            }
            if (Id == null)
            {
                throw new ArgumentNullException(nameof(Id));
            }
            if (Media == null)
            {
                throw new ArgumentNullException(nameof(Media));
            }
            if (ContentType != null)
            {
                outputObject["contentType"] = ContentType;
            }
            if (Id != null)
            {
                outputObject["id"] = Id;
            }
            if (Media != null)
            {
                outputObject["Media"] = Media;
            }
            return outputObject;
        }

        /// <summary>
        /// Required. This is a user settable property. It specifies the
        /// content type of the attachment. .
        /// </summary>
        public string ContentType { get; set; }

        /// <summary>
        /// Required. This is a user settable property. It is the unique name
        /// that identifies the attachment, i.e. no two attachments share the
        /// same id. The id must not exceed 255 characters.
        /// </summary>
        public string Id { get; set; }

        /// <summary>
        /// Required. This is the URL link or file path where the attachment
        /// resides.
        /// </summary>
        public string Media { get; set; }
    }
}

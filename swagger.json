{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.6",
    "title" : "DocumentDBConnector",
    "contact" : {
      "url" : "http://edidingroup.net",
      "name" : "Howard S. Edidin",
      "email" : "hedidin@edidingroup.net"
    },
    "license" : {
      "url" : "https://github.com/HEDIDIN/DocumentDB-REST/blob/master/LICENSE",
      "name" : "Howard S. Edidin"
    },
    "description" : "Azure API Connection for DocumentDB"
  },
  "host" : "[databaseaccount].documents.azure.com:443",
  "basePath" : "/dbs",
  "tags" : [ {
    "name" : "Database",
    "description" : "Databases section"
  }, {
    "name" : "Collection",
    "description" : "Collections section"
  }, {
    "name" : "Document",
    "description" : "Documents section"
  }, {
    "name" : "Attachment",
    "description" : "Attachments section"
  }, {
    "name" : "StoredProcedure",
    "description" : "Stored Procedures section"
  }, {
    "name" : "Trigger",
    "description" : "Triggers section"
  }, {
    "name" : "Udf",
    "description" : "UDF section"
  }, {
    "name" : "Offer",
    "description" : "Offers section"
  }, {
    "name" : "User",
    "description" : "Users section"
  }, {
    "name" : "Permission",
    "description" : "Permissions section"
  }, {
    "name" : "Resource",
    "description" : "Query Resource section"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/" : {
      "get" : {
        "tags" : [ "Database" ],
        "summary" : "List Databases",
        "description" : "List Databases. The database resource is represented by dbs in the [DocumentDB resource model](http://azure.microsoft.com/documentation/articles/documentdb-resources/)",
        "operationId" : "GetDatabaseList",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is {user agent name}/{version}."
        }, {
          "name" : "x-ms-version",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "description" : "The version of DocumentDB REST service. The latest version is used when the header is not provided use 2015-08-06"
        }, {
          "name" : "x-ms-gatewayversion",
          "description" : "The Microsft Date Gateway version",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "version=1.5.35.1"
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation is successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatabaseCollection"
              }
            }
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired."
          }
        }
      },
      "post" : {
        "tags" : [ "Database" ],
        "summary" : "Create a new Database",
        "description" : "The database resource is represented by dbs in the [DocumentDB resource model](http://azure.microsoft.com/documentation/articles/documentdb-resources/)",
        "operationId" : "CreateDatabase",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "application/json",
          "description" : "For creating a database, the Content-Type header must be application/json."
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Database"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "409" : {
            "description" : "Conflict"
          }
        }
      }
    },
    "/{rid-db}" : {
      "get" : {
        "tags" : [ "Database" ],
        "summary" : "Retrieve a database resource by Id",
        "description" : "Retrieve a database resource by Id",
        "operationId" : "GetDatabaseById",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json`."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        }, {
          "name" : "x-ms-gatewayversion",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "version=1.5.35.1"
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful.",
            "schema" : {
              "$ref" : "#/definitions/Database"
            }
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token expired."
          },
          "404" : {
            "description" : "The database is no longer a resource, i.e. the resource was deleted."
          }
        }
      },
      "delete" : {
        "tags" : [ "Database" ],
        "summary" : "Delete a Database",
        "description" : "Delete a Database",
        "operationId" : "DeleteDatabase",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "204" : {
            "description" : "The delete operation was successful."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token expired."
          },
          "404" : {
            "description" : "The database to be deleted is no longer a resource, i.e. the resource was already deleted."
          }
        }
      }
    },
    "/{rid-db}/colls" : {
      "post" : {
        "tags" : [ "Collection" ],
        "summary" : "Create a Collection",
        "description" : "**Create a new Collection**\n- A new collection can be created under the database by executing an HTTPS POST request against the URI resource path colls",
        "operationId" : "CreateCollection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "description" : "The authentication type and signature token. Both master key and resource tokens are allowed for this operation. <c>>type={typeoftoken}%26ver={tokenversion}%26sig={hashsignature}</c>",
          "in" : "header",
          "type" : "string",
          "required" : true
        }, {
          "name" : "id",
          "description" : "This is a user settable property. It is the unique name that identifies the collection",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomBodyCollection"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "400" : {
            "description" : "The override set in the x-ms-consistency-level header is stronger than the one set during account creation."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token expired."
          },
          "404" : {
            "description" : "The document is no longer a resource, i.e. the resource was deleted."
          }
        }
      },
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "List Collections",
        "description" : "**List Collections**\n- Performing a GET on the collections resource of a particular database, i.e. the colls URI path, returns a list of the users in the database",
        "operationId" : "ListCollections",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Collection"
              }
            }
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired"
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Get a Collection",
        "description" : "**Get a Collection BY ID**\n- Performing a GET on a specific collection resource retrieves the properties for the collection.",
        "operationId" : "GetCollectionById",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "in" : "path",
          "description" : "The Collection Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful.",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired"
          },
          "404" : {
            "description" : "The collection is no longer a resource, i.e. the collection was deleted"
          }
        }
      },
      "delete" : {
        "tags" : [ "Collection" ],
        "summary" : "Delete a Collection",
        "description" : "**Delete a Collection**\n- Performing a DELETE on a specific user resource deletes the user resource and its permissions.",
        "operationId" : "DeleteCollection",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "in" : "path",
          "description" : "The Collection Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>>{user agent name}/{version}</c>. "
        } ],
        "responses" : {
          "204" : {
            "description" : "The delete operation was successful"
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired"
          },
          "404" : {
            "description" : "The collection to be deleted is no longer a resource, i.e. the collection was deleted"
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/docs" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "List Documents",
        "description" : "**List Documents**\n- While consistency level is defined at the database account level during account creation, read consistency can be overridden to suffice the need of the application. \n- The override is set per GET operation by setting the x-ms-consistency-level header to the desired level.  \n- The consistency override can only be the same or weaker than the level that was set during account creation\n- Consistency levels from weakest to strongest is Eventual, Session, Bounded Staleness and Strong.\n'For instance, if during account creation the consistency level was set to Session, the override cannot be Strong or Bounded. \n\nFor information on consistent levels [Consistency levels in DocumentDB.](http://azure.microsoft.com/documentation/articles/documentdb-consistency-levels/)",
        "operationId" : "ListDocuments",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request."
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Document"
              }
            }
          },
          "400" : {
            "description" : "The override set in the x-ms-consistency-level header is stronger than the one set during account creation. For example, if the consistency level is Session, the override cannot be Strong or Bounded."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired."
          }
        }
      },
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Create a Document",
        "description" : "**Create a new Document** - Documents are automatically indexed. If automatic indexing is turned off at the collection level, documents can be manually included or excluded from being indexed by using the x-ms-indexing-directive header during the POST operation .Documents must adhere to size limits, as specified in [DocumentDB Limits.](http://azure.microsoft.com/documentation/articles/documentdb-limits/)",
        "operationId" : "CreateDocument",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomBody"
          }
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request."
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Document"
            }
          },
          "400" : {
            "description" : "The override set in the x-ms-consistency-level header is stronger than the one set during account creation."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token expired."
          },
          "404" : {
            "description" : "The document is no longer a resource, i.e. the resource was deleted."
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/docs/{rid-doc}" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Get a Document by Id.",
        "description" : "**Get a Document By Id**\n- While consistency level is defined at the database account level during account creation, read consistency can be overridden to suffice the need of the application.\n- The override is set per GET operation by setting the x-ms-consistency-level header to the desired level. \n- The consistency override can only be the same or weaker than the level that was set during account creation.\n- Consistency levels from weakest to strongest is Eventual, Session, Bounded Staleness and Strong.\"\n\nFor information on consistent level, see [Consistency levels in DocumentDB.](http://azure.microsoft.com/documentation/articles/documentdb-consistency-levels/)",
        "operationId" : "GetDocumentById",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-doc",
          "description" : "The Document ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful",
            "schema" : {
              "$ref" : "#/definitions/Document"
            }
          },
          "400" : {
            "description" : "The override set in the x-ms-consistency-level header is stronger than the one set during account creation. For example, if the consistency level is Session, the override cannot be Strong or Bounded."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>>401</c> is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired."
          },
          "404" : {
            "description" : "The document is no longer a resource, i.e. the document was deleted"
          }
        }
      },
      "put" : {
        "tags" : [ "Document" ],
        "summary" : "Replace a Document",
        "description" : "**Replace a Document**\n- Performing a PUT operation on a specific document resource replaces the entire document resource. All user settable properties, including the id, and the user defined JSON elements must be submitted in the body to perform the replacement\n- Any element omissions result in unintended data loss as this operation is a full replace operation.\n- The x-ms-indexing-directive header can be set and submitted for the operation to include or exclude the document from being indexed.",
        "operationId" : "ReplaceDocument",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-doc",
          "description" : "The Document ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Document"
          }
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request."
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful.",
            "schema" : {
              "$ref" : "#/definitions/Document"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired. 403 is also returned by this operation when the number of permissions in the account has reached its allowable quota"
          },
          "404" : {
            "description" : "The document no longer exists, i.e. the document was deleted"
          },
          "409" : {
            "description" : "The id provided for the new document has been taken by an existing document."
          },
          "413" : {
            "description" : "The document size in the request exceeded the allowable document size in a request'"
          }
        }
      },
      "delete" : {
        "tags" : [ "Document" ],
        "summary" : "Delete a Document",
        "description" : "**Delete a Document by Id**\n\n- Performing a DELETE operation on a specific document resource deletes the document resource from the collection.",
        "operationId" : "DeleteDocument",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-doc",
          "description" : "The Document ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "description" : "Optional. The string of client user agent performing the request.",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The delete operation was successful."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired. 403 is also returned by this operation when the number of permissions in the account has reached its allowable quota"
          },
          "404" : {
            "description" : "The document no longer exists, i.e. the document was already deleted"
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/docs/{rid-doc}/attachments/{rid-attch}" : {
      "get" : {
        "tags" : [ "Attachment" ],
        "summary" : "Get an Attachment",
        "description" : "**Get an Attachment from a document**",
        "operationId" : "GetAttachement",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "image/jpeg", "application/dicom" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-doc",
          "description" : "The Document ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-attch",
          "description" : "The Attachment ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful",
            "schema" : {
              "$ref" : "#/definitions/AttachmentRaw"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes"
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired. 403 is also returned by this operation when the number of permissions in the account has reached its allowable quota"
          },
          "409" : {
            "description" : "The id or Slug provided for the new attachment has been taken by an existing attachment."
          },
          "413" : {
            "description" : "The document size in the request exceeded the allowable document size in a request, which is 512k"
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/docs/{rid-doc}/attachments" : {
      "post" : {
        "tags" : [ "Attachment" ],
        "summary" : "Create an Attachment",
        "description" : "**Create an Attachment**\nThere are two ways to create an attachment resource – ** post the media content to DocumentDB like in the AtomPub Protocol **, or ** post just the attachment metadata to media stored externally **\n\n 1. The first is to POST the raw media in the body payload to store it in the provided attachment storage under your DocumentDB account. _ For the attachment storage quota, see [DocumentDB limits](http://azure.microsoft.com/documentation/articles/documentdb-limits/) _\n \n    1.  For the attachment storage quota, see DocumentDB limits. To create this type of attachment, include the raw attachment (video, audio, file, blob, etc.) as the body of the POST.\n    \n    2.  Two headers must be set  ** Content-Type ** and ** Slug **. The ** Content-Type header is set to the MIME type of the attachment ** while the ** Slug header is set to the name of the attachment **.\n  \n 1. The second way to create an attachment resource is to POST the attachment resource properties noting the type and media link of the attachment",
        "operationId" : "CreateAttachement",
        "consumes" : [ "application/json", "application/dicom", "image/jpeg", "image/png" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-doc",
          "description" : "The Document ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AttachmentRaw"
          }
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful",
            "schema" : {
              "$ref" : "#/definitions/AttachmentResponse"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes"
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired. 403 is also returned by this operation when the number of permissions in the account has reached its allowable quota"
          },
          "409" : {
            "description" : "The id or Slug provided for the new attachment has been taken by an existing attachment."
          },
          "413" : {
            "description" : "The document size in the request exceeded the allowable document size in a request, which is 512k"
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/sprocs" : {
      "post" : {
        "tags" : [ "StoredProcedure" ],
        "summary" : "Create a Stored Procedure",
        "description" : "**Create a Stored Procedure**\n  \n - A stored procedure is a piece of application logic written in JavaScript that is registered and executed against a collection as a single transaction.\n \n - In DocumentDB, JavaScript is hosted in the same memory space as the database. Hence, requests made within stored procedures execute in the same scope of a database session. This enables DocumentDB to guarantee ACID for all operations that are part of a single stored procedure.\n \n - The stored procedure resource is represented by sprocs in the [DocumentDB resource model](http://azure.microsoft.com/documentation/articles/documentdb-resources/).\n \n - The stored procedure resource has a fixed schema. ** The body property contains the application logic **",
        "operationId" : "CreateStoredProcedure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Request",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          }
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StoredProcedure"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "409" : {
            "description" : "Conflict"
          }
        }
      },
      "get" : {
        "tags" : [ "StoredProcedure" ],
        "summary" : "List Stored Procedures",
        "description" : "Performing a GET on the stored procedures resource of a particular database, i.e. the sprocs URI path, returns a list of the stored procedures in the collection",
        "operationId" : "ListStoredProcedures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StoredProcedureList"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "409" : {
            "description" : "Conflict"
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/sprocs/{rid-proc}" : {
      "post" : {
        "tags" : [ "StoredProcedure" ],
        "summary" : "Execute a Stored Procedure",
        "description" : "**Execute a Stored Procedure**\n-  For information on how stored procedures work, including execution of a stored procedure, see [DocumentDB programming Stored procedures](http://azure.microsoft.com/en-us/documentation/articles/documentdb-programming/)",
        "operationId" : "ExecuteStoredProcedure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-proc",
          "description" : "The Procedure ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Request",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          }
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "application/query+json",
          "description" : "Required. The Content-Type header must be application/json."
        }, {
          "name" : "x-ms-documentdb-query-enable-scan",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "name" : "x-ms-documentdb-isquery",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QueryResponseBody"
            }
          },
          "400" : {
            "description" : "The syntax of the SQL statement is incorrect"
          }
        }
      },
      "put" : {
        "tags" : [ "StoredProcedure" ],
        "summary" : "Replace a Stored Procedures",
        "description" : "Performing a PUT operation on a specific stored procedure resource replaces the entire stored procedure resource. All user settable properties, including the id and the body, must be submitted in the body to perform the replacement.",
        "operationId" : "ReplaceStoredProcedure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-proc",
          "description" : "The Procedure ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "application/json"
        }, {
          "name" : "Request",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StoredProcedure"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "409" : {
            "description" : "Conflict"
          }
        }
      },
      "delete" : {
        "tags" : [ "StoredProcedure" ],
        "summary" : "Deletes a Stored Procedures",
        "description" : "Deletes a stored procedure from a collection.",
        "operationId" : "DeleteStoredProcedure",
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-proc",
          "description" : "The Procedure ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "No Content - The delete operation was successful."
          },
          "404" : {
            "description" : "Not Found - The stored procedure to be deleted is no longer a resource, i.e. the resource was already deleted."
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/trigger" : {
      "post" : {
        "tags" : [ "Trigger" ],
        "summary" : "Query a Trigger",
        "description" : "Query a Trigger",
        "operationId" : "QueryTrigger",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "application/query+json",
          "description" : "Required. The Content-Type header must be application/json."
        }, {
          "name" : "x-ms-documentdb-query-enable-scan",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "name" : "x-ms-documentdb-isquery",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          }
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation is successful",
            "schema" : {
              "$ref" : "#/definitions/QueryResponseBody"
            }
          },
          "400" : {
            "description" : "The syntax of the SQL statement is incorrect"
          },
          "401" : {
            "description" : "Either the Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired"
          },
          "404" : {
            "description" : "The collection is no longer a resource. For example, the resource may have been deleted."
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/udf" : {
      "post" : {
        "tags" : [ "Udf" ],
        "summary" : "Query a UDF",
        "description" : "Query a UDF",
        "operationId" : "QueryUdf",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          }
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "application/query+json",
          "description" : "Required. The Content-Type header must be application/json."
        }, {
          "name" : "x-ms-documentdb-query-enable-scan",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "name" : "x-ms-documentdb-isquery",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation is successful",
            "schema" : {
              "$ref" : "#/definitions/QueryResponseBody"
            }
          },
          "400" : {
            "description" : "The syntax of the SQL statement is incorrect"
          },
          "401" : {
            "description" : "Either the Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired"
          },
          "404" : {
            "description" : "The UDF is no longer a resource."
          }
        }
      }
    },
    "/{rid-db}/users" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get a list of users resource of a particular database",
        "description" : "Get a list of users resource of a particular database",
        "operationId" : "GetListOfUsers",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired."
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Create a User",
        "description" : "Create a User",
        "operationId" : "CreateUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "description" : "Optional. The string of client user agent performing the request..",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "201" : {
            "description" : "The operation was successful.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired. 403 is also returned by this operation when the number of users in the account has reached its allowable quota."
          },
          "409" : {
            "description" : "The id provided for the new user has been taken by an existing user."
          }
        }
      }
    },
    "/{rid-db}/users/{rid-user}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get a User",
        "description" : "Get a User",
        "operationId" : "GetUserById",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-user",
          "description" : "The User ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired"
          },
          "404" : {
            "description" : "The user is no longer a resource, i.e. the user was deleted."
          }
        }
      },
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Replace a User",
        "description" : "Replace a User",
        "operationId" : "ReplaceUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-user",
          "description" : "The User Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The replace operation was successful.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The id provided for the user has been taken by an existing user."
          },
          "404" : {
            "description" : "The user to be replaced is no longer a resource, i.e. the user was been deleted."
          }
        }
      },
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Delete a User",
        "description" : "Delete a User",
        "operationId" : "DeleteUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-user",
          "description" : "The User Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "type" : "string",
          "in" : "header",
          "description" : "The authentication type and signature token. Both master key and resource tokens are allowed for this operation. example: type={typeoftoken}&ver={tokenversion}&sig={hashsignature}",
          "required" : true
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The delete operation was successful."
          },
          "401" : {
            "description" : "The user to be deleted is no longer a resource, i.e. the user was already deleted."
          },
          "403" : {
            "description" : "The authorization token has expired."
          }
        }
      }
    },
    "/{rid-db}/users/{rid-user}/permissions" : {
      "post" : {
        "tags" : [ "Permission" ],
        "summary" : "Query a Permission",
        "description" : "Query a Permission",
        "operationId" : "QueryPermission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-user",
          "description" : "The User Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Request",
          "description" : "The Request Body",
          "in" : "body",
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          },
          "required" : true
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "application/query+json",
          "description" : "Required. The Content-Type header must be application/json."
        }, {
          "name" : "x-ms-documentdb-query-enable-scan",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "name" : "x-ms-documentdb-isquery",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation is successful",
            "schema" : {
              "$ref" : "#/definitions/QueryResponseBody"
            }
          },
          "400" : {
            "description" : "The syntax of the SQL statement is incorrect."
          },
          "401" : {
            "description" : "Either the Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired"
          },
          "404" : {
            "description" : "The Permission is no longer a resource"
          }
        }
      }
    },
    "/{rid-db}/users/{rid-user}/permissions/{rid-perm}" : {
      "get" : {
        "tags" : [ "Permission" ],
        "summary" : "Performing a GET operation on a specific permission resource retrieves the permission properties, including the token, f",
        "description" : "Performing a GET operation on a specific permission resource retrieves the permission properties, including the token, for the particular permission. A new resource token is created every time a GET is invoked on the permission resource. This new token has the default validity period of one hour, unless it is overridden.",
        "operationId" : "GetPermission",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-user",
          "description" : "The User Id",
          "in" : "path",
          "type" : "string",
          "required" : true
        }, {
          "name" : "rid-perm",
          "in" : "path",
          "description" : "The Permission Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "description" : "Optional. The string of client user agent performing the request. The recommended format is {user agent name}/{version}.",
          "type" : "string",
          "in" : "header",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "The replace operation was successful",
            "schema" : {
              "$ref" : "#/definitions/Permission"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes"
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "404" : {
            "description" : "The user to be replaced is no longer a resource, i.e. the permission was deleted."
          },
          "405" : {
            "description" : "The authorization token has expired"
          },
          "409" : {
            "description" : "The id provided for the permission has been taken by an existing permission. 409 is also returned when the new permission has already been assigned to another permission for the user."
          }
        }
      },
      "put" : {
        "tags" : [ "Permission" ],
        "summary" : "Replaces the entire user Permission.",
        "description" : "Replaces the entire user Permission.",
        "operationId" : "ReplacePermission",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-user",
          "description" : "The User Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-perm",
          "in" : "path",
          "description" : "The Permission Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Request",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Permission"
          }
        }, {
          "name" : "Content-Type",
          "description" : "Optional. For creating a database, the Content-Type header must be application/json.",
          "type" : "string",
          "in" : "header",
          "required" : false
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Permission"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes"
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired"
          },
          "404" : {
            "description" : "The user to be replaced is no longer a resource, i.e. the permission was deleted"
          },
          "409" : {
            "description" : "The id provided for the permission has been taken by an existing permission. 409 is also returned when the new permission has already been assigned to another permission for the user"
          }
        }
      },
      "delete" : {
        "tags" : [ "Permission" ],
        "summary" : "DELETE operation on that permission resource",
        "description" : "To delete a permission resource, perform a DELETE operation on that permission resource",
        "operationId" : "DeletePermission",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "rid-db",
          "in" : "path",
          "description" : "The Database Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-perm",
          "in" : "path",
          "description" : "The Permission Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-user",
          "description" : "The User Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "type" : "string",
          "in" : "header",
          "description" : "The authentication type and signature token. Both master key and resource tokens are allowed for this operation. type={typeoftoken}&ver={tokenversion}&sig={hashsignature}",
          "required" : true
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>"
        } ],
        "responses" : {
          "204" : {
            "description" : "The delete operation was successful"
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token."
          },
          "403" : {
            "description" : "The authorization token has expired."
          },
          "404" : {
            "description" : "The permission to be deleted is no longer a resource, i.e. the permission was deleted"
          }
        }
      }
    },
    "/{databaseaccount}.documents.azure.com/offers" : {
      "get" : {
        "tags" : [ "Offer" ],
        "operationId" : "GetListOfOffers",
        "summary" : "Get List of Offers",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "databaseaccount",
          "description" : "The Database Account Name",
          "type" : "string",
          "in" : "path",
          "required" : true
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request."
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Offer"
              }
            }
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token expired."
          }
        }
      },
      "post" : {
        "tags" : [ "Offer" ],
        "operationId" : "QueryOffer",
        "summary" : "Query an Offer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "databaseaccount",
          "description" : "The Database Account Name",
          "type" : "string",
          "in" : "path",
          "required" : true
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QuerySql"
          }
        }, {
          "name" : "User-Agent",
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>.",
          "type" : "string",
          "in" : "header",
          "required" : false
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "default" : "application/query+json",
          "description" : "Required. The Content-Type header must be application/json."
        }, {
          "name" : "x-ms-documentdb-query-enable-scan",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        }, {
          "name" : "x-ms-documentdb-isquery",
          "type" : "boolean",
          "in" : "header",
          "required" : true,
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful",
            "schema" : {
              "$ref" : "#/definitions/QueryResponseBody"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired."
          },
          "404" : {
            "description" : "The offer is no longer a resource."
          }
        }
      }
    },
    "/offers/{rid-offer}" : {
      "put" : {
        "tags" : [ "Offer" ],
        "operationId" : "ReplaceOffer",
        "summary" : "Replace an Offer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-offer",
          "description" : "The Offer Id",
          "in" : "path",
          "type" : "string",
          "required" : true
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReplaceOffer"
          }
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The replace operation was successful",
            "schema" : {
              "$ref" : "#/definitions/Offer"
            }
          },
          "400" : {
            "description" : "The override set in the x-ms-consistency-level header is stronger than the one set during account creation."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired."
          },
          "404" : {
            "description" : "The offer is no longer a resource."
          }
        }
      },
      "get" : {
        "tags" : [ "Offer" ],
        "operationId" : "GetOffer",
        "summary" : "GetOfferById",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-offer",
          "description" : "The Offer Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "type" : "string",
          "in" : "header",
          "description" : "The authentication type and signature token. Both master key and resource tokens are allowed for this operation. example: <c>type={typeoftoken}%26ver={tokenversion}%26sig={hashsignature}</c>",
          "required" : true
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. For creating a database, the Content-Type header must be application/json."
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request. The recommended format is <c>{user agent name}/{version}</c>."
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful",
            "schema" : {
              "$ref" : "#/definitions/Offer"
            }
          },
          "400" : {
            "description" : "The JSON body is invalid. Check for missing curly brackets or quotes."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. 401 is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token has expired."
          },
          "404" : {
            "description" : "The offer is no longer a resource."
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/doc" : {
      "post" : {
        "tags" : [ "Resource" ],
        "operationId" : "QueryDocumentResource",
        "summary" : "Perform a Document query",
        "description" : "- Execute a POST method against a resource path using JSON with the \"query\" property set to the SQL query string, and the \"parameters\" property set to the array of optional parameter values.\n- Set the x-ms-documentdb-isquery header to true.\n- Set the Content-Type header to application/query+json.\n- [DocumentDB SQL query cheat sheet](https://azure.microsoft.com/en-us/documentation/articles/documentdb-sql-query-cheat-sheet/)",
        "consumes" : [ "application/query+json", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "The Query Body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          }
        }, {
          "name" : "Authorization",
          "type" : "string",
          "in" : "header",
          "description" : "The authentication type and signature token. Both master key and resource tokens are allowed for this operation.  <c>type={typeoftoken}%26ver={tokenversion}%26sig={hashsignature}</c>",
          "required" : true
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request."
        }, {
          "name" : "x-ms-date",
          "type" : "string",
          "in" : "header",
          "required" : true,
          "description" : "The date of the request The date is expressed in Coordinated Universal Time format. <example>Fri, 08 Apr 2015 03:52:31 GMT</example>"
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "required" : true,
          "in" : "header",
          "description" : "Must be set to application/query+json",
          "default" : "application/query+json"
        }, {
          "name" : "x-ms-documentdb-isquery",
          "type" : "boolean",
          "in" : "header",
          "default" : true,
          "required" : true,
          "description" : "This property must be set to true"
        }, {
          "name" : "x-ms-max-item-count",
          "type" : "string",
          "required" : false,
          "in" : "header",
          "description" : "To page through a result set, set this header to the maximum number for items to be returned back in a single page. <remarks>Range 1 - 1000 Default value = 100</remarks>"
        }, {
          "name" : "x-ms-continuation",
          "type" : "string",
          "required" : false,
          "in" : "header",
          "description" : "To navigate to the next page of items, set this header to the continuation token for the next page."
        }, {
          "name" : "x-ms-documentdb-query-enable-scan",
          "type" : "boolean",
          "in" : "header",
          "required" : false,
          "default" : false,
          "description" : "Use an index scan to process the query if the right index path of type is not available."
        }, {
          "name" : "x-ms-session-token",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "The session token for the request. Used for session consistency"
        }, {
          "name" : "Accept",
          "type" : "string",
          "default" : "application/json",
          "in" : "header",
          "required" : false,
          "description" : "Optional. At the moment, DocumentDB always returns the response payload in standard JSON format. The client must be able to accept the response body in standard JSON format"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QueryResourceResponseBody"
            }
          },
          "400" : {
            "description" : "The override set in the x-ms-consistency-level header is stronger than the one set during account creation."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token expired."
          },
          "404" : {
            "description" : "The document is no longer a resource, i.e. the resource was deleted."
          }
        }
      }
    },
    "/{rid-db}/colls/{rid-coll}/" : {
      "post" : {
        "tags" : [ "Resource" ],
        "operationId" : "QueryCollectionResource",
        "summary" : "Perform a query on a Collection Resource",
        "description" : "- Execute a POST method against a resource path using JSON with the \"query\" property set to the SQL query string, and the \"parameters\" property set to the array of optional parameter values.\n- Set the x-ms-documentdb-isquery header to true.\n- Set the Content-Type header to application/query+json.\n- [DocumentDB SQL query cheat sheet](https://azure.microsoft.com/en-us/documentation/articles/documentdb-sql-query-cheat-sheet/)",
        "consumes" : [ "application/query+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rid-db",
          "description" : "The Database Id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rid-coll",
          "description" : "The Collection ID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "required" : true,
          "description" : "The Query Body",
          "schema" : {
            "$ref" : "#/definitions/QueryRequest"
          }
        }, {
          "name" : "User-Agent",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "Optional. The string of client user agent performing the request."
        }, {
          "name" : "Content-Type",
          "type" : "string",
          "required" : true,
          "in" : "header",
          "description" : "Must be set to application/query+json",
          "default" : "application/query+json"
        }, {
          "name" : "x-ms-documentdb-isquery",
          "type" : "boolean",
          "in" : "header",
          "default" : true,
          "required" : true,
          "description" : "This property must be set to true"
        }, {
          "name" : "x-ms-max-item-count",
          "type" : "string",
          "required" : false,
          "in" : "header",
          "description" : "To page through a result set, set this header to the maximum number for items to be returned back in a single page. <remarks>Range 1 - 1000 Default value = 100</remarks>"
        }, {
          "name" : "x-ms-continuation",
          "type" : "string",
          "required" : false,
          "in" : "header",
          "description" : "To navigate to the next page of items, set this header to the continuation token for the next page."
        }, {
          "name" : "x-ms-documentdb-query-enable-scan",
          "type" : "boolean",
          "in" : "header",
          "required" : false,
          "default" : false,
          "description" : "Use an index scan to process the query if the right index path of type is not available."
        }, {
          "name" : "x-ms-session-token",
          "type" : "string",
          "in" : "header",
          "required" : false,
          "description" : "The session token for the request. Used for session consistency"
        }, {
          "name" : "Accept",
          "type" : "string",
          "default" : "application/json",
          "in" : "header",
          "required" : false,
          "description" : "Optional. At the moment, DocumentDB always returns the response payload in standard JSON format. The client must be able to accept the response body in standard JSON format"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QueryResourceResponseBody"
            }
          },
          "400" : {
            "description" : "The override set in the x-ms-consistency-level header is stronger than the one set during account creation."
          },
          "401" : {
            "description" : "The Authorization or x-ms-date header is not set. <c>401</c> is also returned when the Authorization header is set to an invalid authorization token"
          },
          "403" : {
            "description" : "The authorization token expired."
          },
          "404" : {
            "description" : "The document is no longer a resource, i.e. the resource was deleted."
          }
        }
      }
    }
  },
  "definitions" : {
    "DatabaseCollection" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The user generated unique name for the database. This is a string that must not be more than 255 characters."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property. The resource id (_rid) is a unique identifier that is also hierarchical per the resource stack on the resource model. It is used internally for placement of and navigation to the database resource."
        },
        "Databases" : {
          "type" : "array",
          "description" : "This the array containing the databases returned as part of the list operation.",
          "items" : {
            "$ref" : "#/definitions/Database"
          }
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property. It is the unique addressable URI for the resource."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property representing the resource etag required for optimistic concurrency control."
        },
        "_colls" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the collections resource."
        },
        "_users" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the users resource."
        }
      }
    },
    "User" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "This is the only user settable property. It is a unique name that identifies a user, i.e. no two users share the same id within a database. The name must not exceed 255 characters."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property."
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property representing the resource etag required for optimistic concurrency control."
        },
        "_permissions" : {
          "type" : "string",
          "description" : "This is a system generated property denoting the addressable path of the feed of permissions resource."
        }
      },
      "description" : "A user is a logical namespace for scoping permissions."
    },
    "Collection" : {
      "description" : "A collection is a container of JSON documents and associated JavaScript application logic, i.e. stored procedures, triggers and user-defined functions",
      "required" : [ "_conflicts", "_doc", "_etag", "_rid", "_self", "_sprocs", "_triggers", "_ts", "_udfs", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "This is a user settable property. It is the unique name that identifies a collection, i.e. no two collections share the same id. The id must not exceed 255 characters."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property. The resource ID (_rid) is a unique identifier that is also hierarchical per the resource stack on the resource model. It is used internally for placement and navigation of the collection resource."
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property. It is the unique addressable URI for the resource."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the resource etag required for optimistic concurrency control."
        },
        "_doc" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the documents resource."
        },
        "_sprocs" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the stored procedures (sprocs) resource."
        },
        "_triggers" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the triggers resource"
        },
        "_udfs" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the user-defined functions (udfs) resource."
        },
        "_conflicts" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the conflicts resource. During an operation on a resource within a collection, if a conflict occurs, users can inspect the conflicting resources by performing a GET on the conflicts URI path."
        },
        "indexingPolicy" : {
          "$ref" : "#/definitions/IndexingPolicy"
        }
      }
    },
    "Document" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "This is a user settable property. It is the unique name that identifies the document, i.e. no two documents will share the same id within a database. The id must not exceed 255 characters."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property. The resource ID (_rid) is a unique identifier that is also hierarchical per the resource stack on the resource model. It is used internally for placement and navigation of the document resource."
        },
        "_ts" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property. It is the unique addressable URI for the resource."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the resource etag required for optimistic concurrency control."
        },
        "_attachments" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path for the attachments resource."
        }
      },
      "description" : "The document resource is represented by docs in the DocumentDB resource model. A document consists of user-defined content in JSON format. Aside from the required id property, users can define any arbitrary elements, structures, and hierarchies for the content. The id element is a unique string that is user-settable and must not exceed 255 characters."
    },
    "AttachmentResponse" : {
      "required" : [ "Media", "contentType", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "This is a user settable property. It is the unique name that identifies the attachment, i.e. no two attachments share the same id. The id must not exceed 255 characters. The value set in Slug is recorded here"
        },
        "contentType" : {
          "type" : "string",
          "description" : "This is a user settable property. It specifies the content type of th  attachment."
        },
        "Media" : {
          "type" : "string",
          "description" : "This is the URL link or file path where the attachment resides."
        },
        "_rid" : {
          "type" : "string"
        },
        "_ts" : {
          "type" : "string"
        },
        "_self" : {
          "type" : "string"
        },
        "_etag" : {
          "type" : "string"
        }
      },
      "description" : "Attachments are special documents that contain references and associated metadata with an external blob or media file."
    },
    "Permission" : {
      "required" : [ "id", "permissionMode", "resource" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "This is a user settable property. It is the unique name that identifies the permission, i.e. no two permissions will share the same id within a user. The id must not exceed 255 characters."
        },
        "permissionMode" : {
          "type" : "array",
          "description" : "The access mode on the resource for the user: All or Read. All provides read, write, and delete access to a resource. Read restricts the user to read access on the resource.",
          "items" : {
            "type" : "string"
          }
        },
        "resource" : {
          "type" : "string",
          "description" : "The full addressable path of the resource associated with the permission. For example, dbs/ruJjAA==/colls/ruJjAM9UnAA=/."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property."
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp"
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the resource etag required for optimistic concurrency control."
        },
        "_token" : {
          "type" : "string",
          "description" : "This is a system generated resource token for the particular resource and user."
        }
      },
      "description" : "A permission is an authorization token associated with a user for authorized access to a specific resource."
    },
    "IndexingPolicy" : {
      "required" : [ "ExcludePaths", "IncludePaths", "NumericPrecision", "Path", "StringPrecision", "automatic", "indexType", "indexingMode" ],
      "properties" : {
        "automatic" : {
          "type" : "boolean",
          "description" : "True indicates that automatic indexing is on; otherwise, False.\nThe default value is True, thus all documents are indexed by default. Documents can be excluded by specifying the x-ms-indexingdirective header value to “Exclude”.\nSetting the value to False allows no documents are indexed. Documents can be included by specifying the x-ms-indexingdirective header value to “Include”.",
          "default" : true
        },
        "indexingMode" : {
          "type" : "array",
          "description" : "By default, the indexing mode is consistent. This means that indexing occurs synchronously during insertion, replacement or deletion of documents, and queries are served at the same consistency level as configured in the request.\nTo have indexing occur asynchronously, set the indexing mode to lazy. With lazy indexing, the index is updated when the collection is operating below its request units per second capacity.",
          "items" : {
            "type" : "string"
          }
        },
        "IncludePaths" : {
          "type" : "string",
          "description" : "The array containing the document paths to be indexed. All properties are user settable."
        },
        "indexType" : {
          "type" : "string",
          "description" : "The acceptable values are Hash or Range. Hash indexes are useful for equality comparisons while Range indexes are useful for range comparison. At the moment, range indexes can only be used for numeric values.  The default value is Hash for document paths and Range for a _ts path."
        },
        "NumericPrecision" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The acceptable values are 1 to 7. The default value is 3. This is the byte precision value for numeric values. The higher this value is set, the lower the probability of term collision, resulting in a faster and more accurate comparison. However, the higher the value the greater the storage overhead."
        },
        "StringPrecision" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The acceptable values are 1 to 7. The default value is 3. This is the byte precision value for strings. The higher this value is set, the lower the probability of term collision, resulting in a faster and more accurate comparison. However, the higher the value the greater the storage overhead."
        },
        "Path" : {
          "type" : "string",
          "description" : "The accepted value is a valid document path including wildcards value of ? and *."
        },
        "ExcludePaths" : {
          "$ref" : "#/definitions/ExcludePaths"
        }
      },
      "description" : "As documents are added to a collection, DocumentDB by default automatically indexes the documents, thus allowing documents to be queried. It is at the collection level that you configure the indexing policy. Since indexing policy is set at the collection level, each collection within a database can have different indexing policies."
    },
    "Database" : {
      "required" : [ "Id" ],
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : "The user generated unique name for the database. This is a string that must not be more than 255 characters."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property. The resource id (_rid) is a unique identifier that is also hierarchical per the resource stack on the resource model. It is used internally for placement of and navigation to the database resource."
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property. It is the unique addressable URI for the resource."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property representing the resource etag required for optimistic concurrency control."
        },
        "_colls" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the collections resource."
        },
        "_users" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the addressable path of the users resource."
        }
      }
    },
    "QueryRequest" : {
      "required" : [ "parameters", "QueryString" ],
      "properties" : {
        "QueryString" : {
          "type" : "string",
          "description" : "The SQL query string for the query"
        },
        "parameters" : {
          "type" : "array",
          "description" : "A JSON array of parameters specified as name value pairs. The parameter array can contain from zero to many parameters.Each parameter must have the following values:name: the name of the parameter. Parameter names must be valid string literals and begin with ‘@’.value: the value of the parameter. Can be any valid JSON value (string, number, object, array, Boolean or null).",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Perform a SQL query on a resource"
    },
    "QueryResponseBody" : {
      "properties" : {
        "_rid" : {
          "type" : "string",
          "description" : "The resource id for the collection used within the query"
        },
        "_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of items returned."
        },
        "Resource_array" : {
          "type" : "string",
          "description" : "The array containing the query results."
        }
      },
      "description" : "The response body for the query operation consists of the _rid of the parent resource of the resource being queried, and the resource array containing the resource properties for the projection and selection"
    },
    "Offer" : {
      "required" : [ "offerResourceId", "offerType", "resource" ],
      "properties" : {
        "offerType" : {
          "type" : "string",
          "description" : "This is a user settable property. The valid values are S1, S2 and S3. The value must be capitalized. For more information on performance levels, please see DocumentDB performance levels."
        },
        "resource" : {
          "type" : "string",
          "description" : ". During creation of a collection, this property is automatically associated to the self link of collection associated to the offer resource, i.e. dbs/pLJdAA==/colls/pLJdAOlEdgA=/."
        },
        "offerResourceId" : {
          "type" : "string",
          "description" : "During creation of a collection, this property is automatically associated to the resource id, i.e. _rid of collection associated to the offer resource. The resource id must match collection _rid in the resource property. In the example above, the _rid for the collection is pLJdAOlEdgA=."
        },
        "id" : {
          "type" : "string",
          "description" : "This is a system generated property. The id for the offer resource is automatically generated when it is created. It has the same value as the _rid for the offer."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property. The resource ID (_rid) is a unique identifier that is also hierarchical per the resource stack on the resource model. It is used internally for placement and navigation of the offer"
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property. It is the unique addressable URI for the resource."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property that specifies the resource etag required for optimistic concurrency control."
        }
      },
      "description" : "Each collection must be associated to an offer resource that dictates the performance level and storage preserved for the collection. When a creating a collection, the header x-ms-offer-type can be used to set the offer type for the collection, e.g. S1, S2 and S3. If the header is not set, S1 will be the default offer."
    },
    "AttachmentRaw" : {
      "required" : [ "ContentType", "Slug" ],
      "properties" : {
        "ContentType" : {
          "type" : "string",
          "description" : "The content type of the attachment."
        },
        "Slug" : {
          "type" : "string",
          "description" : "The name of the attachment"
        },
        "User-Agent" : {
          "type" : "string",
          "description" : "The client user agent performing the request"
        },
        "id" : {
          "type" : "string",
          "description" : "This is the attachment name and type."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is a system generated property."
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property representing the resource etag required for optimistic concurrency control."
        },
        "_permissions" : {
          "type" : "string",
          "description" : "This is a system generated property denoting the addressable path of the feed of permissions resource."
        }
      },
      "description" : "POST the raw media in the body payload to store it in the provided attachment storage under your DocumentDB account.  To create this type of attachment, developers include the raw attachment (video, audio, file, blob, etc.) as the body of the POST. Two headers must be set: `Content-Type` and `Slug`. The Content-Type header is set to the MIME type of the attachment while the Slug header is set to the name of the attachment."
    },
    "ExcludePaths" : {
      "required" : [ "Path" ],
      "properties" : {
        "Path" : {
          "type" : "string",
          "description" : "The accepted value is a valid document path including wildcards values of ? and *."
        }
      },
      "description" : "The array containing the document paths to be excluded from indexing."
    },
    "StoredProcedure" : {
      "required" : [ "id", "body" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string",
          "description" : "This is the body of the stored procedure."
        },
        "_rid" : {
          "type" : "string"
        },
        "_ts" : {
          "type" : "string",
          "description" : "This is a system generated property. It specifies the last updated timestamp of the resource. The value is a timestamp."
        },
        "_self" : {
          "type" : "string",
          "description" : "This is a system generated property."
        },
        "_etag" : {
          "type" : "string",
          "description" : "This is a system generated property representing the resource etag required for optimistic concurrency control."
        }
      },
      "description" : "A stored procedure is a piece of application logic written in JavaScript that is registered and executed against a collection as a single transaction."
    },
    "StoredProcedureList" : {
      "properties" : {
        "_rid" : {
          "type" : "string"
        },
        "_count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "StoredProcedures" : {
          "type" : "array",
          "$ref" : "#/definitions/StoredProcedure"
        }
      }
    },
    "CustomBody" : {
      "properties" : {
        "custom" : {
          "type" : "string",
          "description" : "A JSON array of parameters specified as name value pairs."
        }
      }
    },
    "CustomBodyCollection" : {
      "example" : "{\"id\":\"Labs\"}",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "A JSON array of parameters specified as name value pairs."
        }
      }
    },
    "QuerySql" : {
      "required" : [ "query" ],
      "properties" : {
        "query" : {
          "type" : "string",
          "description" : "The value of this property the SQL statement to be executed. [DocumentDB SQL query cheat sheet] (https://azure.microsoft.com/en-us/documentation/articles/documentdb-sql-query-cheat-sheet/)",
          "example" : "{“query”:”select * from offer where offer.offerType =’S2’”}"
        }
      }
    },
    "ReplaceOffer" : {
      "example" : "{\"offerType\":\"S2\",\"resource\":\"dbs/pLJdAA==/colls/pLJdAJm+yQE=/\",\"offerResourceId\":\"pLJdAJm+yQE=\",\"id\":\" tAK6\",\"_rid\":\"tAK6\"}",
      "required" : [ "offerType", "resource", "offerResourceId", "id", "_rid" ],
      "properties" : {
        "offerType" : {
          "type" : "string",
          "description" : "This is a user settable property. The valid values are S1, S2 and S3. The value must be capitalized"
        },
        "resource" : {
          "type" : "string",
          "description" : "This must be the self-link of the collection associated to the offer resource"
        },
        "offerResourceId" : {
          "type" : "string",
          "description" : "This must be the resource id of the collection associated to the offer resource. It cannot be changed. The resource id must match collection _rid in the resource property."
        },
        "id" : {
          "type" : "string",
          "description" : "The id for the offer resource. It has the same value as the _rid for the offer."
        },
        "_rid" : {
          "type" : "string",
          "description" : "This is the resource id of the offer."
        }
      }
    },
    "QueryResourceResponseBody" : {
      "properties" : {
        "_rid" : {
          "type" : "string",
          "description" : "The resource id for the collection used within the query"
        },
        "_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of items returned."
        },
        "Resource_array" : {
          "type" : "string",
          "description" : "The array containing the query results."
        },
        "Date" : {
          "type" : "string",
          "description" : "The date of the request The date is expressed in Coordinated Universal Time format.",
          "example" : "<example>Fri, 08 Apr 2015 03:52:31 GMT</example>"
        },
        "x-ms-item-count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of item returned by the operation."
        },
        "x-ms-continuation" : {
          "type" : "string",
          "description" : "This is an opaque string returned when the query has potentially more items to be retrieved.       <para>The x-ms-continuation can be included in subsequent requests as a request header to resume execution of the query.</para><para>Clients can fetch subsequent pages of results by echoing the x-ms-continuation header as another request. In order to read all results, clients must repeat this process until an empty x-ms-continuation is returned.</para>"
        },
        "x-ms-request-charge" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This is the number of request units (RU) consumed by the operation"
        },
        "x-ms-activity-id" : {
          "type" : "string",
          "description" : "This is a unique identifier for the operation. It can be used for tracing execution of DocumentDB requests."
        },
        "x-ms-session-token" : {
          "type" : "string",
          "description" : "The session token to be used for subsequent requests. Used for session consistency"
        }
      },
      "description" : "DocumentDB query executions are stateless at the server side, and can be resumed at any time using the x-ms-continuation header. The <c>x-ms-continuation</c> value uses the last processed document resource ID <c>>(_rid)</c> to track progress of execution. Therefore if documents are deleted and re-inserted between fetching of pages, then it could potentially be excluded from any of the query batches. <remarks>However, the behavior and format of the x-ms-continuation header might change in a future service update.</remarks>",
      "example" : {
        "_rid" : " XP0mAJ3H-AA=",
        "Documents" : [ "….  …." ],
        "_count" : 10
      }
    }
  }
}